generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Review {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  rating     Int
  text       String
  driver     Driver?    @relation(fields: [driverId], references: [id])
  driverId   Int?
  customer  Customer?   @relation(fields: [customerId], references: [id])
  customerId Int?
}

model Ride {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  startLocation   String
  date       DateTime
  destination String
  driver     Driver    @relation(fields: [driverId], references: [id])
  driverId   Int
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId Int
  vehicle    Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId  Int
  managers   Manager[]
}

model Vehicle {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  chassisnumber String @unique
  brand      String
  licenseplate String
  rides      Ride[]
}

model Driver {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  rides     Ride[]
  reviews   Review[]
}

model Customer {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  rides     Ride[]
  reviews   Review[]
}

model Manager {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  rides     Ride[]
}


model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  birthday  DateTime
  email     String    @unique
  phoneNumber  String
  role      String
  password  String
  driver    Driver?
  customer  Customer?
  manager   Manager?
}